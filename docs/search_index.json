[["index.html", "PIPO Project – WILD6900 Chapter 1 About", " PIPO Project – WILD6900 Nadav Mouallem 2023-04-30 Chapter 1 About This digital book written in Markdown for Reproducible Data Science (WILD6900). This book outlines elements of my PIPO project, which studies pinus ponderosa (Ponderosa pine, PIPO) regeneration and plant community composition after reburns of high severity patches. Reburns, or fires that burn over an area that has previously been burned, are not new in ponderosa forests. However, a shift toward reburns of high severity patches is new and is creating novel disturbance interactions on the landscape. My study investigates the impacts of reburns of high severity patches on ponderosa regeneration and plant community composition. The content involves the creation of relational databases in SQL and data visualization with ggplot2 in R. "],["database-design-and-structure.html", "Chapter 2 Database Design and Structure 2.1 Creating the Database Structure in R", " Chapter 2 Database Design and Structure The PIPO project is organized as a relational database, or a collection of related tables. My project has four interrelated tables: PLOTS : this table has all experimental plots, each with a unique plot_id. PIPO : this table has data on ponderosa pine regeneration. FUELS : this table has data on fuel loads in each plot, measured in different fuel classes. COMMUNITY : this table contains all plant community data, measured as percent cover. Fig 1. Diagram of the PIPO database. 2.1 Creating the Database Structure in R RSQLite was used in R to create the database in SQL. Below is the code used to create the database structure. To start, necessary packages were loaded and a connection for the database needs to be established. # load packages ---- library(DBI) # establish a connection with the database PIPO_db &lt;- dbConnect(RSQLite::SQLite(), &quot;/Users/nadav/Documents/USU/Thesis/MS/PIPO.db&quot;) After connection was established, time to make the Plots table. For this, the plot_id is the PRIMARY KEY, as it is a unique value for each plot. # creating the &#39;plots&#39; table dbExecute(PIPO_db, &quot;CREATE TABLE plots ( plot_id varchar(15) NOT NULL, x_coord double, y_coord double, severity varchar(5), PRIMARY KEY (plot_id) );&quot;) Next is the Fuels table. For this, transect is the PRIMARY KEY. # creating the &#39;fuels&#39; table dbExecute(PIPO_db, &quot;CREATE TABLE fuels ( transect varchar(15) NOT NULL, plot_id varchar(15), 1_hr double, 10_hr double, 100_hr double, 1000_hr double, duff_litter double, PRIMARY KEY (transect) );&quot;) Next, the PIPO table. For this, seedling_num is the PRIMARY KEY, which is a unique ID for each seedling measured. # creating the &#39;PIPO&#39; table dbExecute(PIPO_db, &quot;CREATE TABLE pipo ( seedling_num double NOT NULL, plot_id varchar(15), height_cm double, diam_cm double, azimuth double, position double, distance_cm double, PRIMARY KEY (seedling_num) );&quot;) Finally, the community table. For this, quad_number is the PRIMARY KEY, which is a unique ID for each plot monitored. # creating the &#39;community&#39; table dbExecute(PIPO_db, &quot;CREATE TABLE community ( quad_number double NOT NULL, plot_id varchar(15), species varchar(10), percent_cover double, PRIMARY KEY (quad_number) );&quot;) "],["visualizing-data-with-ggplot2.html", "Chapter 3 Visualizing Data with ggplot2 3.1 Requisite Packages 3.2 Ponderosa Regeneration 3.3 Fuel Load 3.4 Plant Community", " Chapter 3 Visualizing Data with ggplot2 In this chapter I will use ggplot2 to visualize the pilot data I collected last summer (2022) in a reburn fire north of Flagstaff, AZ. I collected my data across different fire severities and reburn combinations. I set up plots in reburns of low and high severity patches, as well as areas that burned once at low and high severity. The plot types are as follow: Low severity control (LSC): burned once at low severity. Low severity reburn (LSR): reburn of low severity patch. High severity control (HSC): burned once at high severity. High severity reburn (HSR): reburn of high severity patch. Additionally, I will create a consistent color scheme where each plot type has the same color across my figures using the National Park palette! There will be three plot subsections, each visualizing different types of data: Ponderosa Regeneration : differences in ponderosa pine regeneration across plot types. Fuel Load : differences in fuel load across plots. Plant Community : differences in plant community composition. 3.1 Requisite Packages The following packages were used in R for the plots: library(tidyverse) library(ggplot2) library(dplyr) library(reshape2) library(nationalparkcolors) The National Park Palette was downloaded from github and used to create a consistent color scheme for all plots. The “Mt. Rainier” color palette was used: pal &lt;- park_palette(&quot;MtRainier&quot;, 4) Here is what the Mt. Rainier palette looks like: 3.2 Ponderosa Regeneration Ponderosa regeneration is quantified as stems per hectare. Height (cm) and diameter at root collar (mm) were measured for all ponderosa in plots. For the first plot, I looked at the relationship between ponderosa height and diameter across my plots. The code and the resulting plot are as follows: PIPO_scatter &lt;- regen2 %&gt;% mutate(burn_type = factor(burn_type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = seed_diam, y = seed_height, color = burn_type)) + geom_point() + labs(x = &quot;Seed Diameter (mm)&quot;, y = &quot;Seed Height (cm)&quot;, color = &quot;Burn Type&quot;) + scale_color_manual(values=pal) + theme_bw() The next plot examines the differences in ponderosa mean height across plot types. The code and resulting plot are as follows: seedheight_plot &lt;- regen2 %&gt;% mutate(burn_type = factor(burn_type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = burn_type, y = seed_height, color = burn_type)) + geom_boxplot() + geom_jitter(alpha = 0.5) + labs(x = &quot;Reburn Type&quot;, y = &quot;Mean Height (cm)&quot;, title = &quot;Mean Seedling Height (cm)&quot;, color = &quot;Burn Type&quot;) + theme_bw() + theme(legend.position = &quot;none&quot;) + theme(plot.title = element_text(hjust = 0.5)) + scale_color_manual(values = pal) The final plot is a bar plot that examines the differences in ponderosa regeneration (in stems per square meter) across plot types. The code and resulting plot are as follows: seed_m2 &lt;- sev_sum %&gt;% mutate(burn_type = factor(burn_type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = burn_type, y = seed_per_m2, fill = burn_type)) + geom_col() + labs(x = &quot;Reburn Type&quot;, y = &quot;Seedlings per square meter&quot;, title = &quot;Ponderosa Regeneration&quot;, fill = &quot;Burn Type&quot;) + theme_bw() + theme(legend.position = &quot;none&quot;) + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = pal) 3.3 Fuel Load This next section will be examining differences in fuel load across my plot types. Fuel loads were meausured using Browns Transects and quantified in mgha, or metric tons per hectare. The raw data was processed with the Rfuels package downloaded from github: https://github.com/danfosterfire/Rfuels.git The first plot is a violin plot with a boxplot overlay. Violin plots are useful because they show peaks in the data was well as the distribution of the data. The code and plot are as follows: fuel_plot &lt;- pumpkin_fuel_loads %&gt;% mutate(plot_type = factor(plot_type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = plot_type, y = fuelload_total_Mgha, color = plot_type)) + geom_violin() + geom_boxplot(width = 0.05) + labs(x = &quot;Plot Type&quot;, y = &quot;Fuel Load (mgha)&quot;, title = &quot;Plot Fuel Loads&quot;, color = &quot;Plot Type&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) + scale_color_manual(values=pal) + theme(legend.position = &quot;none&quot;) The second plot is a stacked bar plot, where each bar shows the amount of each fuel type. The fuel types are: duff, litter, 1hr, 10hr, 100hr, 1000hr (rotten and sound). The data first had to be transformed from with the “pivot longer” function. The code and plot are as follows: fuel_pivot &lt;- pumpkin_fuel_loads %&gt;% select(c(6:12,17)) %&gt;% mutate(plot_type = factor(plot_type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% pivot_longer(cols = -plot_type, names_to = &quot;fuel_load&quot;, values_to = &quot;load_value&quot;) %&gt;% ggplot(aes(x = plot_type, y = load_value, fill = fuel_load)) + geom_bar(position = &quot;stack&quot;, stat = &quot;identity&quot;) + theme_bw() + scale_fill_brewer(labels = c(&quot;1000 hour rotten&quot;, &quot;1000 hour sound&quot;, &quot;100 hour&quot;, &quot;10 hour&quot;, &quot;1 hour&quot;, &quot;Duff&quot;, &quot;Litter&quot;)) + labs(x = &quot;Plot Type&quot;, y = &quot;Fuel Load (mgha)&quot;, title = &quot;Plot Fuel Load&quot;, fill = &quot;Fuel Class&quot;) + theme(plot.title = element_text(hjust = 0.5)) 3.4 Plant Community This last sections examines trends in my plant community data. Plant cover of all species was estimated in each plot. In the first plot, I am looking at average percent cover of native bunchgrasses, which are important agents of ecosystem stability and health. The code and figure are as follows: bunch_box1 &lt;- bunch_anova %&gt;% mutate(type = factor(type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = type, y = sum, color = type)) + geom_boxplot(alpha = 0.3) + labs(x = &quot;Reburn Type&quot;, y = &quot;Bunchgrass % Cover&quot;, title = &quot;Bunchrass Cover&quot;, color = &quot;Burn Type&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) + scale_color_manual(values = pal) In the final plot I looked at the average species richness in plots. Species richness is the unique number of species present in each plot. The code and figure are as follows: rich_box1 &lt;- richness_aov %&gt;% mutate(type = factor(type, levels = c(&quot;LSC&quot;, &quot;LSR&quot;, &quot;HSC&quot;, &quot;HSR&quot;))) %&gt;% ggplot(aes(x = type, y = richness, color = type)) + geom_boxplot() + labs(x = &quot;Reburn Type&quot;, y = &quot;Mean Height (cm)&quot;, title = &quot;Average Species Richness&quot;, color = &quot;Burn Type&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) + scale_color_manual(values = pal) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
